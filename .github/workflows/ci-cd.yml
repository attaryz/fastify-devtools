name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    env:
      YARN_IGNORE_PATH: 1

    strategy:
      matrix:
        node-version: [20.x,22.x,24.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable Corepack (use repo Yarn version)
        run: corepack enable

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          package-manager-cache: false

      - name: Prepare Yarn 4.3.1
        run: corepack prepare yarn@4.3.1 --activate

      - name: Verify Yarn version
        run: corepack yarn -v

      - name: Cache Yarn (Berry) artifacts
        uses: actions/cache@v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: corepack yarn install --immutable

      - name: Biome (lint + format check)
        run: corepack yarn biome:ci

      - name: Run tests
        run: corepack yarn test

      - name: Build project
        run:  

      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  publish:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    env:
      YARN_IGNORE_PATH: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Enable Corepack (use repo Yarn version)
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20.x"
          check-latest: true
          package-manager-cache: false

      - name: Prepare Yarn 4.3.1
        run: corepack prepare yarn@4.3.1 --activate

      - name: Install dependencies
        run: corepack yarn install --immutable

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
